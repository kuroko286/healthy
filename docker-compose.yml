version: '3'
services:
  # backend (spring boot)
  springapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - healthy
    volumes:
      - .:/app  # mounting a volume to hot reload container to source code 
    depends_on:
      - mysqldb
      - redis
      - rabbitmq
  
  # frontend (react)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:5173
    networks:
      - healthy
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules  # prevent local overwrite the container's node_modules
    depends_on:
      - springapp
    
  # mysql
  mysqldb:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 2862003(())aa
      MYSQL_DATABASE: healthy
      MYSQL_USER: kuroko
      MYSQL_PASSWORD: 2862003
    ports:
      - 3306:3306 # host port: container port
    networks:
      - healthy
    volumes:
      - mysqldata:/var/lib/mysql  # persist container data
    restart: always

  # redis
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - healthy

  # rabbitmq
  rabbitmq:
    image: rabbitmq:latest
    restart: always
    ports:
      - "5672:5672"  # RabbitMQ default port
  

networks:
  healthy:  # create common network between spring app and mysqldb
volumes:
  mysqldata:
